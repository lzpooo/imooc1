<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- com.briup.mappers.StudentMapper是我们定义接口的全限定名字 这样就可以使用接口调用映射的SQL语句了 这个名字一定要和接口对应上-->
<mapper 
namespace="com.briup.mappers.StudentMapper">

<resultMap type="Student" 
id="StudentResult">
	<id property="studId" column="stud_id" />
	<result property="name" column="name" />
	<result property="email" column="email" />
	<result property="dob" column="dob" />
	<result property="phone" column="phone"/>
</resultMap>

<select id="findAllStudents"
	 resultMap="StudentResult">
	SELECT * FROM STUDENTS
</select>

<!-- 列名和属性名字不一致可以给查询的列起一个别名 -->
<select id="findStudentById" 
parameterType="int" 
resultType="Student">
	SELECT STUD_ID AS STUDID 
			,NAME,EMAIL,DOB,phone
	FROM STUDENTS
	WHERE
	STUD_ID=#{id}
</select>

<insert id="insertStudent" 
parameterType="Student"> 
INSERT INTO
STUDENTS(STUD_ID,NAME,EMAIL,DOB) 
VALUES(#{studId},#{name},#{email},#{dob}) 
</insert>


<delete id="deleteStudent" 
	parameterType="int">
delete from students 
	where stud_id=#{id}
</delete>

<update 
id="updateStudent" 
parameterType="student">
update students 
set name=#{name},email=#{email}
where stud_id=#{studId}
</update>

<insert id="insertPhone" 
	parameterType="Student">
insert into 
students(stud_id,name,email,dob,phone)
values(#{studId},#{name},
	   #{email},#{dob},#{phone})
	
</insert>


<!-- <insert id="insertWithId" 
parameterType="Student"
useGeneratedKeys="true"
keyProperty="studId"> -->
<insert id="insertWithId" 
parameterType="Student">
<selectKey keyProperty="studId" 
	resultType="int" order="BEFORE">
	select my_sq.nextval from dual
</selectKey>
<!-- 如果直接在sql语句中采用序列，那么将来
返回的Student对象的studId值就为null -->
	insert into students(stud_id,name,
	email,dob,phone)
	values(#{studId},#{name},
	#{email},#{dob},#{phone})
</insert>


</mapper>



